name: Python Application

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main, develop]

jobs:
    test:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]
                python-version: [3.7, 3.8, 3.9, "3.10", "3.11"]

        steps:
            - uses: actions/checkout@v3

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v4
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install pytest pytest-cov
                  if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
              shell: bash

            - name: Lint with flake8
              run: |
                  pip install flake8
                  # Stop the build if there are Python syntax errors or undefined names
                  flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
                  # Exit-zero treats all errors as warnings
                  flake8 . --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics
              continue-on-error: true

            - name: Test with pytest
              run: |
                  pytest tests/ --cov=. --cov-report=xml --cov-report=html -v
              continue-on-error: true

            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v3
              with:
                  file: ./coverage.xml
                  flags: unittests
                  name: codecov-${{ matrix.os }}-py${{ matrix.python-version }}
              continue-on-error: true

    build:
        runs-on: ubuntu-latest
        needs: test

        steps:
            - uses: actions/checkout@v3

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.10"

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

            - name: Verify installation
              run: |
                  python -c "import tkinter; print('Tkinter available')"
                  python -c "import sqlite3; print('SQLite3 available')"
